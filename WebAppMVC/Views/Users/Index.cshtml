
@model IEnumerable<User>

@inject IStringLocalizer<Program> StringLocalizer
@inject IHtmlLocalizer<Program> HtmlLocalizer
@inject IViewLocalizer ViewLocalizer;

@*@foreach(var user in Model) {
	<p>@user.Name : @user.Password</p>
}*@

<div>
	@using(Html.BeginForm("search", "users")) {
		@:Phrase @Html.TextBox("phrase") <br>
		<input type="submit" value="Search" class="btn" />

		@*@Html.AntiForgeryToken()*@
	}
</div>


<div>
	<table class="table">
		<thead>
			<tr>
				<th>
					@*DisplayName działa jak HttpUtility.HtmlEncode*@
					@Html.DisplayName(StringLocalizer[nameof(Models.Entity.Id)])
				</th>
				<th>
					@*@Html.DisplayNameFor(model => model.Name)*@ @*automatyczne tłumaczenie adnotacji skonfigurowane w klasie Program*@
					@*@StringLocalizer["italics", Html.DisplayNameFor(x => x.Name)]*@ @*nie stosuje formatowania*@
					@HtmlLocalizer["italics", /*encoded*/ Html.DisplayNameFor(x => x.Name)] @*stosuje formatowanie*@
				</th>
				<th>
					@*@Html.Label(nameof(Models.User.Password))*@
					@Html.Label(ViewLocalizer[nameof(Models.User.Password)].Value)
				</th>
			</tr>
		</thead>
		<tbody>
			@foreach(var user in Model) {
				<tr>
					<th>
						@Html.DisplayFor(_ => user.Id)
					</th>
					<th>
						@Html.DisplayFor(_ => user.Name)
					</th>
					<th>
						@user.Password
					</th>
				</tr>
			}
		</tbody>
	</table>
</div>